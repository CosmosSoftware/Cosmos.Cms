@using Kendo.Mvc.UI
@addTagHelper *, Kendo.Mvc
@{
    ViewData["Title"] = "File Manager";
    var blobUrl = (string)ViewData["BlobEndpointUrl"];
    var containerClass = "container mt-5 pt-2";
    if (ViewData["Popup"] != null && ((bool)ViewData["Popup"]))
    {
        Layout = "_LayoutNoToolbar";
        containerClass = "continer-fluid";
    }

    if (!string.IsNullOrEmpty((string)ViewData["option"]))
    {
        
    }
}
@(Html.Kendo().Notification().Name("notification"))
@(Html.Kendo().Window()
    .Name("window")
    .Title("Image Preview")
    .Visible(false)
    .Content(
    @<text>
        <img id="imagePreview" src="#" alt="Image Preview" />
    </text>)
    .Draggable()
    .Resizable()
    .Actions(actions => actions.Pin().Minimize().Maximize().Close())
    )
<script src="~/js/clipboard.min.js"></script>
<style>
    .k-dropzone {
        min-height: 200px;
        vertical-align: top;
    }
</style>
<div class="@containerClass">
    <div class="row">
        <div class="col">
            <a id="frmEditFile" class="btn btn-primary btn-sm" style="display: none" href="javascript:editCode()">Edit File</a> <a id="frmEditImage" class="btn btn-primary btn-sm" style="display: none" href="javascript:editImage()">Edit Image</a>
            <button id="btnCopyUrl" style="display: none" class="clipboard btn btn-sm btn-success" data-clipboard-text="" title="Click to copy url">Click to copy URL <span class="ca-gov-icon-clipboard"></span></button>
        </div>
    </div>
    <div class="row" id="uploaderRow" style="display:none">
        <div class="col">
            <div class="form-row align-items-center">
                <div class="col-11">
                    <label class="sr-only" for="inlineFormInputGroup">Folder</label>
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text">Uploading to: </div>
                        </div>
                        <div type="text" class="form-control" id="folderPath" placeholder="Folder path">
                        </div>
                    </div>
                </div>
                <div class="col-1">
                    <button type="button" id="btnCloseUpload" class="btn btn-secondary mb-2">Close</button>
                </div>
            </div>
            <p>INSTRUCTIONS: Drag and drop files into box below or click &quot;Select files ...&quot;. When done click &quot;Close.&quot;</p>

            @(Html.Kendo().Upload()
            .Name("files")
            .Async(a => a
            .Save("Upload", "FileManager")
            .Remove("Remove", "FileManager")
            .AutoUpload(true)
            .ChunkSize(5242880) // bytes (5 MB) - AWS S3 multi upload requires 5 MB parts. Last part can be any size
            )
            .Events(e =>
            e.Upload("getPath")
            .Success("onUploadSuccess")
            .Remove("getPath")
            .Error("onError")
            )
            )
        </div>
    </div>
    <div class="row" id="fileManagerRow">
        <div class="col dropZoneElement">
            @(Html.Kendo().FileManager().Name("fileManager")
            .Draggable(false)
            .DataSource(ds =>
            {
            ds.Read(operation => operation
            .Type(HttpVerbs.Post)
            .Action("Read", "FileManager")
            );
            ds.Destroy(operation => operation
            .Type(HttpVerbs.Post)
            .Action("Destroy", "FileManager")
            );
            ds.Create(operation => operation
            .Type(HttpVerbs.Post)
            .Action("Create", "FileManager")
            );
            ds.Update(operation => operation
            .Type(HttpVerbs.Post)
            .Action("Update", "FileManager")
            );
            })
            .Toolbar(tb => tb.Items(items =>
            {
            items.Add("createFolder");
            items.Add("sortDirection");
            items.Add("sortField");
            items.Add("changeView");
            items.Add("spacer");
            items.Add("details");
            items.Add("search");
            items.Add("").Type("button").Name("OpenUpload").Text("Upload Files").Command("OpenUploader");
            }))
            .ContextMenu(context => context.Items(items =>
            {
            items.Add("rename");
            items.Add("delete");
            }))
            .Events(eve =>
            eve.Select("onSelect")
            .Navigate("onNavigate")
            .Open("onOpen")
            .Error("onError"))
            )
        </div>
    </div>
</div>
<kendo-dialog name="eventDialog" title="Upload Messages" modal="true" max-width="400" visible="false">
    <content>
        <div class="bg-dark text-light" id="divEventMsg" style="min-height: 180px; min-width: 300px;">
        </div>
    </content>
    <actions>
        <action text="Close">
        </action>
    </actions>
    <popup-animation>
        <open duration="500" effects="fade:in" />
        <close duration="500" effects="fade:out" />
    </popup-animation>
</kendo-dialog>
<script>

    function openUploader(path) {
        $("#fileManagerRow").hide();
        $("#uploaderRow").show();
        $("#folderPath").html("/" + path);
    }

    // Extend the file manager class with a new commands
    // prior to creating the file manager widget.

    var filemanagerNS = kendo.ui.filemanager;
    var path;
    var blobRelativePath = "";
    var awsUploadId = "";

    var clipboard = new ClipboardJS('.clipboard');

    clipboard.on('success',
        function(e) {
            console.info('Action:', e.action);
            console.info('Text:', e.text);
            console.info('Trigger:', e.trigger);
            alert("Copied: " + e.text);
            e.clearSelection();
        });

    function getPath(e) {
        e.data = {
            path: blobRelativePath,
            awsUploadId: awsUploadId
        };
    }

    filemanagerNS.commands.OpenUploader = filemanagerNS.FileManagerCommand.extend({
        exec: function () {
            var that = this;

            if (typeof (that.filemanager) !== "undefined") {
                var filemanager = that.filemanager; // get the kendo.ui.FileManager instance

                var selectedItems = filemanager.getSelected();
                if (selectedItems !== null && typeof (selectedItems) !== "undefined" && selectedItems.length === 1) {
                    var entry = selectedItems[0];
                    if (entry.isDirectory) {
                        if (entry.path === "" || entry.path === "") {
                            showNotification("Please select a folder to upload files.", "error");
                        } else if (entry.path.startsWith("pub")) {
                            openUploader(entry.path);
                        } else {
                            showNotification("This tool can only upload to the 'pub' folder or its sub folders.", "error");
                        }
                    } else {
                        showNotification("Please select a folder first.", "error");
                    }
                }
                else {
                    showNotification("Please select a folder to upload files.", "error");
                }
            }
        }
    });

    function showNotification(message, status) {
        var pos = $("#fileManager").offset();

        notification.setOptions({
            position: {
                top: pos.top,
                left: pos.left
            }
        });
        notification.show(message, status);
    }

    function onComplete(e) {
        var items = e.sender.wrapper.find('.k-file').length;
        var errorItems = e.sender.wrapper.find('.k-file-invalid').length;
        var uploadedItems = e.sender.wrapper.find('.k-file-success, .k-file-invalid').length;
        if (items === uploadedItems) {
            if (errorItems > 0) {
                $("#divEventMsg").html("Upload request completed with errors.");
            } else {
                $("#divEventMsg").html("Upload request completed.");
                //$("#files").data("kendoUpload").clearAllFiles();
            }
            $("#eventDialog").data("kendoDialog").open();
        }
    }

    function onUploadSuccess(e) {
        $("#fileManager").data("kendoFileManager").refresh();
    }

    function onError(e) {
        $("#fileManager").data("kendoFileManager").refresh();
        if (typeof (e.XMLHttpRequest) !== "undefined") {
            $("#files").data("kendoUpload").clearAllFiles();
            $("#divEventMsg").html("Error: " + e.XMLHttpRequest.responseText);
        } else if (typeof (e.xhr) !== "undefined") {
            $("#divEventMsg").html("Error: " + e.xhr.responseText);
        } else {
            $("#divEventMsg").html("Error: Could not complete request.");
        }
        $("#eventDialog").data("kendoDialog").open();
    }

    function onSelect(e) {
        // event: Select; context: files/Tone/clipboard.min.js, false, .js
        var entry = e.entries[0];

        if (entry.isDirectory === false) {
            switch (entry.extension) {
            case ".js":
            case ".css":
            case ".html":
            case ".htm":
                path = entry.id;
                $("#frmEditFile").show();
                $("#frmEditImage").hide();
                break;
            case ".png":
            case ".jpg":
            case ".jpeg":
            case ".gif":
                $("#frmEditFile").hide();
                $("#frmEditImage").hide();
                break;
            default:
                $("#frmEditFile").hide();
                $("#frmEditImage").hide();
            }

            $("#btnCopyUrl").attr("data-clipboard-text", "@blobUrl" + entry.path);
            $("#btnCopyUrl").show();

            if (window.opener) {
                window.opener.ccmsSelectedFile = "@blobUrl" + entry.path;
                window.opener.$("#ccmsInsertImageUrl").data("kendoTextBox").value(window.opener.ccmsSelectedFile);
            }

            return;
        } else {
            blobRelativePath = entry.path + "/";
            $("#frmEditFile").hide();
            $("#frmEditImage").hide();
            $("#btnCopyUrl").hide();
        }
    }

    function onNavigate(e) {
        $("#frmEditFile").hide();
        $("#frmEditImage").hide();
        blobRelativePath = e.path + "/";
        $("#frmEditFile").hide();
        $("#frmEditImage").hide();

        $("#btnCopyUrl").hide();
    }

    function editCode() {
        window.location.href = "@Url.Action("EditCode", "FileManager")?path=" + path;
    }

    function editImage() {
        window.location.href = "@Url.Action("EditImage", "FileManager")?path=" + path;
    }

    function onOpen(e) {
        if (e.entry.extension == ".png" || e.entry.extension == ".jpg") {
            $("#imagePreview").attr("src", "@blobUrl" + e.entry.path);
            $("#window").data("kendoWindow").center().open();
        }
    }
    var notification;
    $(document).ready(function() {
        //var filemanager = $("#filemanager").getKendoFileManager();
        //filemanager.executeCommand({ command: "TogglePaneCommand", options: { type: "preview" } });
        //filemanager.toolbar.fileManagerDetailsToggle.switchInstance.toggle();
        notification = $("#notification").data("kendoNotification");
        $("#btnCloseUpload").click(function () {
            $("#fileManagerRow").show();
            $("#uploaderRow").hide();
            $("#files").data("kendoUpload").clearAllFiles();
        });
    });
</script>