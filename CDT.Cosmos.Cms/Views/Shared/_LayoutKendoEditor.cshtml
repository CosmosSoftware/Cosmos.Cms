@using CDT.Cosmos.Cms.Common.Services.Configurations
@using CDT.Cosmos.Cms.Services
@using Microsoft.AspNetCore.Routing
@using Microsoft.Extensions.Options;
@using System.Reflection
@inject IOptions<CosmosConfig> options
@model ArticleViewModel
@{
                /*
                This Layout is for use anywhere that Telerik/Kendo
                HTML WYSIWYG editor is used.

                Currently, this is used in these two places:
                    Edit/Edit
                    Template/Edit
            */
    // So we can display Cosmos version in
    var assemblyName = Assembly.GetExecutingAssembly().GetName();

    // Determine if this the Editor or Template controller
    var controllerName = (string)Context.GetRouteData().Values["controller"];

    // Team member information (only applies to users who are team members)
    var teamMemberLogic = (TeamIdentityLogic)ViewData["TeamLogic"];
    var teamName = (string)ViewData["TeamName"];

    // Permissions configuration
    var isAuthor = false;
    var isEditor = false;
    var isAdministrator = false;
    var isTeamMember = teamMemberLogic != null;
    if (User != null && (User.IsInRole("Authors") || teamMemberLogic?.IsInRole(TeamRoleEnum.Author, teamName) == true))
    {
        isAuthor = true;
        isEditor = false;
        isAdministrator = false;
    }
    else if (User != null && User.IsInRole("Editors") || teamMemberLogic?.IsInRole(TeamRoleEnum.Editor, teamName) == true)
    {
        isAuthor = false;
        isEditor = true;
        isAdministrator = false;
    }
    else if (User != null && User.IsInRole("Administrators"))
    {
        isAuthor = false;
        isEditor = false;
        isAdministrator = true;
    }

    var accountBtnTemplate = "<div id='userAcctMenu' style='font-size:0.8em'><span class='fa fa-user'></span> Account</div>";
}
<!DOCTYPE html>
<html>
<head>
    <title>@Model.Title</title>
    @* Layout head *@
    @Html.Raw(Model.Layout.Head)
    @* Page specific head *@
    @Html.Raw(Model.HeaderJavaScript)
    @* Kendo head *@
    <partial name="_KendoHeadPartial" />
    <script src="~/js/CosmosTimeZone.js"></script>
    <style>
        .k-widget.k-editor.k-editor-inline {
            background-color: inherit;
            color: inherit;
            border: 1px dashed blue;
            box-sizing: inherit;
        }

        .k-success {
            background-color: #06c91a;
        }

        .k-alert {
            background-color: #be4d25;
        }
    </style>
</head>
<body>
    @RenderBody()
    @* Kendo editor elements *@
    <form id="frmEdit" asp-action="Edit" method="post" kendo-validator="true">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="ArticleNumber" />
        <input type="hidden" asp-for="UrlPath" />
        <input type="hidden" asp-for="VersionNumber" />
        <input type="hidden" asp-for="Content" />
        <input type="hidden" asp-for="HeaderJavaScript" />
        <input type="hidden" asp-for="FooterJavaScript" />
        <input type="hidden" asp-for="Published" />
        <input type="hidden" asp-for="RoleList" />
        <input type="hidden" asp-for="Title" />
        <input type="hidden" id="userName" value="@User.Identity?.Name" />
    </form>
    @* Dialogs *@
    <kendo-dialog name="saveChangesDialog" title="Please Wait" modal="true" visible="false" min-width="500">
        <content>
            <div>
                <p>Saving changes...</p>
            </div>
        </content>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <kendo-dialog name="changesSavedDialog" title="Changes Saved" modal="true" visible="false" min-width="500">
        <content>
            <div>
                <p>Your changes have been successfully saved.</p>
                <div class="form-group">
                    <span>Version saved:</span>
                    <span id="savedVersionNo"></span>
                </div>
            </div>
        </content>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <kendo-dialog name="versionsDialog" title="Page Versions" modal="true" visible="false" min-width="500">
        <content>
            <p>This will be version to be saved. Continue?</p>
        </content>
        <actions>
            <action text="Cancel">
            </action>
            <action action="goVersions" primary="true" text="Yes" title="Confirm">
            </action>
        </actions>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <kendo-dialog name="editCodeDialog" title="Edit Code" modal="true" visible="false" min-width="500">
        <content>
            <p>You are about to edit code for this page. This will save the current version before proceeding. Are you ready?</p>
        </content>
        <actions>
            <action text="Cancel">
            </action>
            <action action="editCode" primary="true" text="Yes" title="Confirm">
            </action>
        </actions>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <kendo-dialog name="saveErrorsDialog" title="Errors Log" modal="true" visible="false" min-width="700">
        <content>
            <div id="divErrorLog">
            </div>
        </content>
        <actions>
            <action text="Close">
            </action>
        </actions>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <kendo-dialog name="closeEditorDialog" title="Close Editor" modal="true" visible="false" min-width="700">
        <content>
            <p><span class="badge badge-warning">Warning:</span> Any unsaved changes will be lost!</p>
        </content>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
        <actions>
            <action text="Cancel">
            </action>
            <action action="closeEditor" primary="true" text="Close" title="Confirm">
            </action>
        </actions>
    </kendo-dialog>
    <kendo-dialog name="permissionsDialog" title="Permissions Editor" modal="true" visible="false" min-width="700">
        <content>
            <h4><span class="fa fa-shield"></span> Page View Permissions</h4>
            <hr />
            <p></p>
            <p>Use this tool to set which user role(s) can see this page.</p>
            @(Html.Kendo().MultiSelect()
            .Name("roleListMS")
            .DataTextField("RoleName")
            .DataValueField("RoleName")
            .Placeholder("Select roles...")
            .AutoBind(false)
            .DataSource(source =>
            {
            source.Read(read => { read.Action("Get_RoleList", "Editor"); })
            .ServerFiltering(true);
            })
            )
            <p></p>
            <p><span class="badge badge-danger">WARNING: </span> This will immediately set permissions for all versions of this page.</p>
        </content>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
        <actions>
            <action text="Cancel">
            </action>
            <action action="saveRoleListMultiSelect" text="Set Permissions" title="Save Permissions">
            </action>
        </actions>
    </kendo-dialog>
    <kendo-dialog name="schedulingDialog" title="Publishing Date" modal="true" visible="false" min-width="700">
        <content>
            <h4><span class="fa fa-calendar"></span> Publishing Date/Time</h4>
            <hr />
            <p></p>
            <p>Set the day and time when this page will be made visible on the web.</p>
            <p>Tips:</p>
            <ul>
                <li>Pick now or a date/time in the past to publish right away.</li>
                <li>Pick a date/time later on to schedule publishing in the future.</li>
                <li>
                    Removing or clearing out the date/time will &quot;un-publish&quot; this version.
                    <ul>
                        <li>If no prior version exists, this page will not appear on the web.</li>
                        <li>Otherwise, the prior <em>published</em> version will appear instead.</li>
                    </ul>
                </li>
            </ul>
            <div class="row">
                <div class="col-6">
                    @(Html.Kendo().DateTimePicker().Name("dtPublished").Enable(User.IsInRole("Editors") || User.IsInRole("Administrators")))
                </div>
                <div class="col-4">
                    @Html.Kendo().Button().Name("btnPublishNow").Content("Publish Now").Events(eve => eve.Click("onPubNow"))
                </div>
            </div>
            <div class="col">
                @Html.Kendo().Button().Name("timeZone")
            </div>
            <p></p>
            <div class="form-row">
                <div class="col">
                    <div class="k-button k-button-sm k-button-primary" onclick="cancelPublish()">Clear Date/Time</div>
                </div>
            </div>
            <p></p>
            <p><span class="badge badge-warning">Note: </span> This will immediately set permissions for all versions of this page.</p>
        </content>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
        <actions>
            <action action="cancelPublishDateTime" text="Cancel">
            </action>
            <action action="savePublishDateTime" text="Set Date/Time" title="Save Date/Time">
            </action>
        </actions>
    </kendo-dialog>
    
    @*
        Cosmos toolbar is added last to make sure it is overlayed over everything at the top of this page.
    *@
    <nav id="k-ccms-ToolBar" class="navbar navbar-expand-md fixed-top" style="height: 52px; background-color:transparent !important">
       <div class="container-fluid">
        @(Html.Kendo().ToolBar()
        .Name("ccms-kendo-toolBar")
        .Items(items =>
        {
        items.Add().Type(CommandType.SplitButton).Text("Menu").Id("ddMenu").MenuButtons(menuButtons =>
        {
        menuButtons.Add().Text("Save");
        menuButtons.Add().Text("Code View");
        menuButtons.Add().Text("Files");
        menuButtons.Add().Text("Preview");
        menuButtons.Add().Text("Versions");
        menuButtons.Add().Text("Close");
        menuButtons.Add().Text("Permissions").Hidden(!User.IsInRole("Editors") && !User.IsInRole("Administrators"));
        menuButtons.Add().Text("Help");
        }).Click("bgEditClick").Hidden(controllerName == "Templates");

        items.Add().Type(CommandType.Button).Text("<span id='btnPublish'></span>").Click("openSchedulerDialog").Hidden(isAuthor);
        items.Add().Type(CommandType.Button).Template("<div class='btn btn-primary' onclick='openPermissionsDialog()' style='height:32px' id='btnPermissions'><span class='fa fa-shield'></span></div>").Hidden(isAuthor);


        items.Add().Template("<div id='pendingChangesBadge' class='badge badge-warning' style='display:none'>Changes Pending Save</div>");

        items.Add().Template("<span>Title: </span>");
        items.Add().Template(Html.Kendo().TextBox().Name("tbTitle").Value(Model.Title).HtmlAttributes(new {style = "width: 32vw;"}).ToHtmlString());

        items.Add().Type(CommandType.SplitButton).Template(accountBtnTemplate).MenuButtons(menuButtons =>
        {
        menuButtons.Add().Text("User Account");
        menuButtons.Add().Text("Log Out");
        }).Click("bgEditClick");

        if (isAuthor) {
        items.Add().Template("<a style='font-size:0.8em' title='Your role with this page is that of an Author'>(Author)</a>");
        } else if (isEditor)
        {
        items.Add().Template("<a style='font-size:0.8em' title='Your role with this page is that of an Editor'>(Editor)</a>");
        } else if (isAdministrator)
        {
        items.Add().Template("<a style='font-size:0.8em' title='Your role with this page is that of an Editor'>(Administrator)</a>");
        }

        items.Add().Type(CommandType.Button).Template("<div style='padding-top:4px;display:none;' class='k-button k-button-sm k-button-secondary' id='cdnLbl'></div> <div id='progressBar' style='width:80px'></div>");

        items.Add().Template("<div><span id='versInfo' style='margin-right:10px;font-size:0.6em;'>" + @assemblyName.Version + "</span> </div>");
        items.Add().Type(CommandType.Button).Click("hideToolBar").Text("<span title='Collapse toolbar'>&laquo;</span>");
        })
        )
       </div>
    </nav>
    <div id="k-ccms-showBar" style="display:none;position:absolute;top:0px;left:0px;z-index:2000000">
        @(Html.Kendo().Button().Name("btnShowToolBar").Events(eve => eve.Click("showToolBar")).Content("<span title='Expand toolbar'>&raquo;</span>"))
    </div>
    <style>
        #ccms-kendo-toolBar {
            width: 100%;
        }
    </style>
    <script>
        function hideToolBar(e){
            $("#k-ccms-ToolBar").hide();
            $("#k-ccms-showBar").show();
        }
        function showToolBar(e){
            $("#k-ccms-ToolBar").show();
            $("#k-ccms-showBar").hide();
        }
    </script>

    @* Bootstrap 5 JS*@
    <script src="/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    @* Editor script block *@
    <script>

        var editors = [];
        var cdnDetail = "";
        var editorsLoaded = false;
        var validationSummary = $("#validation-summary");

        $(document).ready(function () {
            loadPublishLocalDateTime();
            loadRoleListMultiSelect();
            loadEditors();
        });

        // The following fixes URL on image click
        $(document).on("click", ".k-listview-item", function (e) {
            // Update image url
            fixUrl("#k-editor-image-url");
            // Update file url
            fixUrl("#k-editor-file-url");
        });

        // Button save edits event
        $("#btnSave").on("click",
            function(e) {
                e.preventDefault();
                handlePost();
            });

        function fixUrl(fieldName) {
            var input = $(fieldName);
            path = input.val();
            if (path !== null && typeof (path) !== "undefined" && path.length > 0) {
                path = path.replaceAll("%2F", "/");
                input.val(path);
            }
        }

        // PERMISSIONS FUNCTIONS
        function loadRoleListMultiSelect() {
            var roleListMs = $("#roleListMS").data("kendoMultiSelect");
            var roles = $("#RoleList").val().split(",");
            roleListMs.value(roles);
            updatePermissionsBtn();
        }

        function saveRoleListMultiSelect() {

            var roleListMs = $("#roleListMS").data("kendoMultiSelect");
            var roleList = roleListMs.dataItems().map(x => x.RoleName).join(",");

            if ($("#RoleList").val() !== roleList) {
                $("#pendingChangesBadge").show();
            }

            $("#RoleList").val(roleList);

            updatePermissionsBtn();
        }

        function updatePermissionsBtn() {
            var roles = $("#RoleList").val().split(",");
            var btnPermissions = $("#btnPermissions");
            btnPermissions.removeClass();
            if (typeof roles === "undefined" || roles === null || roles.length < 1 || (roles.length === 1 && roles[0] === "")) {
                btnPermissions.addClass("k-button k-button-sm k-button-secondary");
                $(btnPermissions).kendoTooltip({
                    content: "No permissions set."
                });
            } else {
                btnPermissions.addClass("k-button k-button-sm k-button-warning");
                $(btnPermissions).kendoTooltip({
                    content: "Allowed roles: " + $("#RoleList").val() + "."
                });
            }
        }

        function openPermissionsDialog() {
            $("#permissionsDialog").data("kendoDialog").open();
        }

        // EDITOR UTILITIES
        function loadEditors() {
            var elements = $("[contenteditable='true']");
            $(elements).each(function () {
                deployEditor(this);
            });
        }

        function loadCdnProgBar(maxValue) {
            $("#progressBar").kendoProgressBar({
                min: 0,
                max: maxValue,
                type: "percent"
            });
        }

        function deployEditor(element) {

            var blobUrl = "@((string) ViewData["BlobEndpointUrl"])";

            var toolList = ["bold","italic","underline","strikethrough","justifyLeft","justifyCenter","justifyRight","justifyFull","insertUnorderedList","insertOrderedList","insertUpperRomanList","insertLowerRomanList","indent","outdent","createLink","unlink","insertImage","insertFile","tableWizard","createTable","addRowAbove","addRowBelow","addColumnLeft","addColumnRight","deleteRow","deleteColumn","mergeCellsHorizontally","mergeCellsVertically","splitCellHorizontally","splitCellVertically","tableAlignLeft","tableAlignCenter","tableAlignRight","viewHtml","formatting","cleanFormatting","foreColor","backColor"];

            var tools = $(element).attr("ccms-editor-tools");
            if (tools !== null && tools !== "" && typeof tools !== "undefined") {
                toolList = tools.split(",");
            }

            // The Kendo style may override that of the page.
            // To fix, grab the inherited CSS from the parent
            // div and after the editor is built, reapply.
            //var color = $(element).closest("div").css("color");
            //var bgcolor = $(element).closest("div").css("background-color");
            //var toolBar = $("#ToolBar");
            //var offSet = toolBar.offset();

            $(element).kendoEditor({
                tools: toolList,
                imageBrowser: {
                    fileTypes: "@AllowedFileExtensions.ImageUploadsFilter",
                    transport: {
                        read: "@Url.Action("ImageBrowserRead", "FileManager")",
                        imageUrl: blobUrl + "{0}",
                        thumbnailUrl: "@Url.Action("CreateThumbnail", "FileManager")"
                    }
                },
                fileBrowser: {
                    fileTypes: "@AllowedFileExtensions.FileUploadsFilter",
                    transport: {
                        read: "@Url.Action("FileBrowserRead", "FileManager")",
                        fileUrl: blobUrl + "{0}"
                    }
                }
            });

            // Add to the editor array
            editors.push(element);
        }

        function removeEditors() {
            $(editors).each(function() {
                var element = $(this);
                var editor = $(this).data("kendoEditor");
                //editor.close();
                editor.destroy();
                $(["k-widget", "k-editor", "k-editor-inline"]).each(function(i, css) {
                    element.removeClass(css);
                });

                if (element.attr("class").trim() === "") {
                    element.removeAttr("class");
                }

                if (element.attr("data-role") === "editor") {
                    element.removeAttr("data-role");
                }
            });

            editors = [];
        }

        function editorSave(id, type, value) {
            // Find the editor
            var editor = $("#" + id).data(type);
            if (editor !== null && typeof (editor) !== "undefined") {
                // ReSharper disable once QualifiedExpressionMaybeNull
                editor.value(value);
            } else {
                editor = $("#" + id);
                editor.html(value);
            }
        }

        function closeEditor() {
            window.location.href = "@Url.Action("Versions", "Editor", new {Id = Model.ArticleNumber})";
        }

        function onPubNow(e) {
            var now = new Date();
            now = now.toUTCString();
            $("#Published").val(now);
            loadPublishLocalDateTime();
        }

        // SCHEDULING PUBLISHING UTILITIES
        function loadPublishLocalDateTime() {
            var published = $("#Published").val();
            var publishButton = $("#btnPublish");
            if (published !== null && typeof (published) !== "undefined" && published.trim() !== "") {

                if (!published.endsWith("Z") && !published.endsWith("GMT")) {
                    published += " GMT";
                }

                var localDateTime = new Date(published);
                var dateTimePicker = $("#dtPublished").data("kendoDateTimePicker");
                dateTimePicker.value(localDateTime);
                var now = new Date();

                if (now < localDateTime) {
                    //publishButton.attr("class", "k-button k-primary");
                    publishButton.html("Pending");
                    $(publishButton).kendoTooltip({
                        content: "This version is set to be published in the future at: " + localDateTime.toLocaleString() + ". Click to change."
                    });
                } else {
                    //publishButton.attr("class", "k-button k-success");
                    publishButton.html("Published");
                    $(publishButton).kendoTooltip({
                        content: "This version is now published and available on the web as of: " + localDateTime.toLocaleString() + ". Click to change."
                    });
                }
            } else {
                //publishButton.attr("class", "k-button k-alert");
                publishButton.html("DRAFT");
                $(publishButton).kendoTooltip({
                    content: "This version is not yet published. Click to schedule publishing date and time."
                });
            }
        }

        function openSchedulerDialog() {
            $("#schedulingDialog").data("kendoDialog").open();
        }

        function cancelPublish() {
            var dateTimePicker = $("#dtPublished").data("kendoDateTimePicker");
            dateTimePicker.value("");
        }

        function savePublishDateTime() {
            // Save date/time
            var dateTimePicker = $("#dtPublished").data("kendoDateTimePicker");
            var dateTimeValue = dateTimePicker.value();

            if ($("#Published").val() !== dateTimeValue) {
                $("#pendingChangesBadge").show();
            }

            // Note, this saves the date/time using local time (of the user's computer).
            // The server stores this as UTC time.
            if (dateTimeValue !== null && dateTimeValue !== "null" && dateTimeValue !== "") {
                var datetime = new Date(dateTimeValue);
                var utcString = datetime.toUTCString();
                $("#Published").val(utcString);
                $("#btnPublish").html("Published");
            } else {
                $("#btnPublish").html("DRAFT");
                $("#Published").val("");
            }

            //loadPublishLocalDateTime();
        }

        function cancelPublishDateTime() {
            loadPublishLocalDateTime();
            $("#schedulingDialog").data("kendoDialog").close();
        };

        // Handles button bar click - edit button.
        function bgEditClick(e) {
            var command = e.target.text();
            switch (command) {
                case "Save":
                    handlePost();
                    break;
                case "Code View":
                    $("#editCodeDialog").data("kendoDialog").open();
                    break;
                case "Files":
                    window.open("/FileManager", "_blank ");
                    break;
                case "Versions":
                    openVersionsDialog();
                    break;
                case "Close":
                    showCloseEditorDialog();
                    break;
                case "Preview":
                    window.open("@Url.Action("Preview", "Home", new {Model?.Id})");
                    break;
                case "Permissions":
                    openPermissionsDialog();
                    break;
                case "Help":
                    window.open("https://cosmos.azureedge.net/edit_page#HtmlEditor");
                    break;
                case "User Account":
                    window.location.href = "@Url.Page("/Account/Manage/Index", new {area = "Identity"})";
                    break;
                case "Log Out":
                    $("#frmLogout").submit();
                    break;
            }
        }

        function handlePost() {
            $("#saveChangesDialog").data("kendoDialog").open();

            var validator = $("#frmEdit").data("kendoValidator");
            $("#divErrorLog").html("");

            if (validator.validate()) {

                $("#saveChangesDialog").data("kendoDialog").open();

                // Save the date with the time zone
                savePublishDateTime();

                // Close and remove editors
                removeEditors();

                // save the page content.
                saveContent();

                // Save title
                $("#Title").val($("#tbTitle").val());

                processKendoCtrls("listbox", "kendoDropDownList");
                var data = $("#frmEdit").serialize();

                // Strip Zero width characters from data
                // https://stackoverflow.com/questions/11305797/remove-zero-width-space-characters-from-a-javascript-string
                data = data.replace(/[\u200B-\u200D\uFEFF]/g, '');

                // No template change, may do ajax post.
                $.post("@Url.Action("SaveHtml", controllerName)",
                    data,
                    function(response) {
                        $("#pendingChangesBadge").hide();
                        if (response.IsValid) {
                            $("#previewItem").show();
                            if (response.CdnResult !== null && typeof (response.CdnResult) !== "undefined" && response.CdnResult !== "") {
                                cdnProgress(response.CdnResult.EstimatedSeconds, response.CdnResult.Detail);
                            }
                        } else {
                            var errorMsg = "<h5>Error(s) detected while saving:</h5>";

                            // Invalid response.
                            $.each(response.Errors,
                                function(index, error) {
                                    errorMsg = "<p>" + error.Key + "</p><ul>";
                                    $.each(error.Errors,
                                        function(index, innerError) {
                                            errorMsg = errorMsg + "<li>" + innerError.ErrorMessage + "</li>";
                                        });
                                    errorMsg = errorMsg + "</ul>";
                                });
                            $("#divErrorLog").html(errorMsg);
                            $("#saveErrorsDialog").data("kendoDialog").open();
                        }
                        //
                        // Save the data that came back.
                        //
                        $("#Id").val(response.Model.Id);
                        $("#btnPreview").attr("href", "@Url.Action("Preview", "Home")/" + response.Model.Id);
                        $("#ArticleNumber").val(response.Model.ArticleNumber);

                        // Template name
                        editorSave("eTemplateName", "kendoDropDownList", response.Model.TemplateName);

                        $("#UrlPath").val(response.Model.UrlPath);

                        // Version
                        $("#VersionNumber").val(response.Model.VersionNumber);
                        $("#versionLbl").text("Version: " + response.Model.VersionNumber);

                        // Published
                        $("#Published").val(response.Model.Published);
                        loadPublishLocalDateTime();

                        // Role list
                        $("RoleList").val(response.Model.RoleList);
                        loadRoleListMultiSelect();
                        updatePermissionsBtn();

                        // Title
                        editorSave("eTitle", "kendoEditor", response.Model.Title);

                        // Load Content
                        $("#eContent").html(response.Model.Content);

                        $("#savedVersionNo").text(response.Model.VersionNumber);

                        loadEditors();

                        $("#saveChangesDialog").data("kendoDialog").close();
                        if (response.IsValid) {
                            $("#changesSavedDialog").data("kendoDialog").open();
                            setTimeout(function() {
                                    $("#changesSavedDialog").data("kendoDialog").close();
                                },
                                1000);
                        }
                    });
            } else {
                validationSummary.html("<p>Cannot save because this page has errors.</p>");
            }
            return false;
        }

        function cdnProgress(seconds, detail) {
            $("#cdnLbl").html(detail + ":");
            $("#cdnLbl").show();
            loadCdnProgBar(seconds);
            var pb = $("#progressBar").data("kendoProgressBar");
            pb.value(0);
            var interval = setInterval(function() {
                    if (pb.value() < seconds) {
                        pb.value(pb.value() + 1);
                    } else {
                        clearInterval(interval);
                    }
                },
                100);
        }

        function saveContent() {
            var editor = $("#eContent").data("kendoEditor"); // Div editor
            var hiddenField = $("#Content"); // Corresponding hidden field.

            if (typeof editor !== 'undefined' && editor !== null) {
                // Object is a Kendo Editor
                var html = editor.value();
                hiddenField.val(html);
            } else {
                editor = $("#eContent");
                hiddenField.val(editor.html());
            }
            hiddenField.val(hiddenField.val().replace(" contenteditable=", " crx="));
        }

        function processKendoCtrls(roleName, dataName) {
            $(document).find("[data-role=" + roleName + "]").each(function() {
                var editor = $(this).data(dataName);
                var hid;
                var hidden;
                if (typeof editor !== 'undefined' && editor !== null) {
                    // Is a Kendo control
                    var elementId = editor.element.attr("id");
                    hid = editor.element.attr("id").substring(1, editor.element.attr("id").length);
                    hidden = $("#" + hid);
                    if (hidden === null || hidden === "undefined") {
                        alert("Could not find hidden field: " + hid);
                    } else {
                        hidden.val(editor.value());
                    }
                } else {
                    editor = $(this);
                    hid = editor.attr("id").substring(1, editor.attr("id").length);
                    hidden = $("#" + hid);
                    if (hidden === null || hidden === "undefined") {
                        alert("Could not find hidden field: " + hid);
                    } else {
                        hidden.val(editor.html());
                    }
                }
            });
        }

        function openVersionsDialog() {
            $("#versionsDialog").data("kendoDialog").open();
        }

        function goVersions() {
            $("#btnSave").click();
            window.location = "@Url.Action("Versions", "Editor")/" + $("#ArticleNumber").val();
        }

        function editCode() {
            $("#btnSave").click();
            window.location = "@Url.Action("EditCode", "Editor")/" + $("#Id").val();
        }

        function showCloseEditorDialog() {
            var dialog = $("#closeEditorDialog").data("kendoDialog");
            dialog.open();
        }
    </script>
    <form id="frmLogout" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new {area = ""})">
        <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
    </form>

    @await RenderSectionAsync("Scripts", false)
</body>
</html>